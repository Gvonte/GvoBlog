{"version":3,"sources":["page/ArticleCreate.js","service/createArticle.js","service/uploadFile.js","service/uploadImg.js"],"names":["ArticleCreate","connect","state","category","userInfo","user","getCategory","create","props","token","info","username","message","error","to","form","history","getFieldDecorator","validateFields","useState","upload","setUpload","datasource","setDatasource","useEffect","length","onSearch","searchText","data","map","item","name","filter","toLowerCase","includes","onSubmit","e","a","async","preventDefault","err","values","payload","title","description","CategoryId","content","find","id","file","response","axios","post","then","res","success","push","catch","msg","className","labelAlign","labelCol","md","span","lg","wrapperCol","offset","layout","Item","label","rules","required","validator","rule","value","dataSource","onFocus","customRequest","options","FormData","append","headers","uploadFile","onSuccess","fileList","onChange","type","uploadImg","htmlType"],"mappings":"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","file":"static/js/17.f640b9e7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getCategory } from '../store/category'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './ArticleCreate.css'\r\nimport { Form, Input, Button, Icon, Upload, message, AutoComplete } from 'antd'\r\nimport uploadFile from '../service/uploadFile'\r\nimport uploadImg from '../service/uploadImg'\r\n\r\nimport createArticle from '../service/createArticle'\r\n\r\nconst ArticleCreate = connect(state => ({\r\n    category: state.category,\r\n    userInfo: state.user\r\n}), {\r\n    getCategory\r\n})((Form.create({})(function (props) {\r\n    const { userInfo } = props;\r\n    if (!userInfo.token) {\r\n        return <Redirect to=\"/login\" />\r\n    } else if (userInfo.info.username !== 'admin1') {\r\n        message.error('很抱歉，您没有新建博客的权限');\r\n        return <Redirect to=\"/\" />\r\n    } else {\r\n        const { category, getCategory, form, history } = props;\r\n        const { getFieldDecorator, validateFields } = form;\r\n        const [upload, setUpload] = useState([]);\r\n        const [datasource, setDatasource] = useState([])\r\n        useEffect(() => {\r\n            if (category.length === 0) {\r\n                getCategory();\r\n            }\r\n        }, [category.length, getCategory]);\r\n        const handleSubmit = async e => {\r\n            e.preventDefault();\r\n            validateFields((err, values) => {                \r\n                let { title, description, CategoryId, content } = values;\r\n                if (!err) {\r\n                    CategoryId = category.find(item => item.name === CategoryId).id;\r\n                    content = content.file.response.file;\r\n                    createArticle({ title, description, CategoryId, content }).then(res => {\r\n                        message.success(\"新建文章成功\");\r\n                        history.push(`/article/${res.data.data.id}`);\r\n                    }).catch(err => {\r\n                        message.error(err.response.data.msg);\r\n                    })\r\n                }\r\n            });\r\n        };\r\n        const onSearch = (searchText) => {\r\n            const data = category.map(item => item.name);\r\n            if (!searchText) {\r\n                setDatasource(data);\r\n            } else {\r\n                setDatasource(data.filter(item => item.toLowerCase().includes(searchText.toLowerCase())));\r\n            }\r\n        };\r\n        return (\r\n            <Form onSubmit={handleSubmit} className=\"articlecreate-container\"\r\n                labelAlign=\"left\"\r\n                labelCol={{ md: { span: 3 }, lg: { span: 2 } }}\r\n                wrapperCol={{ md: { offset: 3 }, lg: { offset: 2 } }}\r\n                layout=\"horizontal\">\r\n                <Form.Item label=\"标题\">\r\n                    {getFieldDecorator('title', {\r\n                        rules: [{ required: true, message: '请输入标题!' }]\r\n                    })(\r\n                        <Input className=\"input\" />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"描述\">\r\n                    {getFieldDecorator('description', {\r\n                        rules: [{ required: true, message: '请输入描述!' }]\r\n                    })(\r\n                        <Input className=\"input\" />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"分类\">\r\n                    {getFieldDecorator('CategoryId', {\r\n                        rules: [\r\n                            { required: true, message: '请输入分类!' },\r\n                            {\r\n                                validator(rule, value) {\r\n                                    const categories = category.map(item => item.name);\r\n                                    return categories.includes(value)\r\n                                },\r\n                                message: '请输入正确的分类！',\r\n                            }\r\n                        ]\r\n                    })(\r\n                        <AutoComplete dataSource={datasource} onSearch={onSearch} onFocus={onSearch}>\r\n                            <Input className=\"input\" />\r\n                        </AutoComplete>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"上传\">\r\n                    {getFieldDecorator('content', {\r\n                        rules: [{ required: true, message: '请上传内容!' }]\r\n                    })(\r\n                        <Upload\r\n                            name='file'\r\n                            customRequest={options => {\r\n                                uploadFile(options.file).then(res => {\r\n                                    options.onSuccess(res.data.data);\r\n                                });\r\n                            }}\r\n                            fileList={upload}\r\n                            onChange={(info) => {\r\n                                if (info.fileList.length === 0) {\r\n                                    setUpload([])\r\n                                } else {\r\n                                    setUpload([info.file])\r\n                                }\r\n                            }}\r\n                        >\r\n                            <Button >\r\n                                <Icon type=\"upload\" />上传博客（MD文件）\r\n                        </Button>\r\n                        </Upload>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"传图片\">\r\n                    <Upload\r\n                        name='img'\r\n                        customRequest={options => {\r\n                            uploadImg(options.file).then(res => {\r\n                                options.onSuccess(res.data.data);\r\n                            });\r\n                        }}\r\n                    >\r\n                        <Button >\r\n                            <Icon type=\"upload\" />上传图片\r\n                        </Button>\r\n                    </Upload>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"btn\">新建博客</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n})))\r\n\r\nexport default ArticleCreate","import axios from 'axios'\r\n\r\nexport default payload => {\r\n    return axios.post('/article', payload)\r\n}","import axios from 'axios'\r\n\r\nexport default file => {\r\n    const data = new FormData();\r\n    data.append('file', file);\r\n    return axios.post('/upload', data, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" }\r\n    })\r\n}","import axios from 'axios'\r\n\r\nexport default file => {\r\n    const data = new FormData();\r\n    data.append('file', file);\r\n    return axios.post('/uploadImg', data, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" }\r\n    })\r\n}"],"sourceRoot":""}