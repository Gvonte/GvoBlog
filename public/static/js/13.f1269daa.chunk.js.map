{"version":3,"sources":["components/ArticleInfo.js","page/ArticleId.js","service/deleteComment.js","service/createComment.js"],"names":["ArticleInfo","React","memo","props","category","author","browse","className","color","type","TextArea","confirm","moment","locale","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","ArticleId","connect","state","article","getArticle","id","match","params","history","useEffect","useState","comment","setComment","delComment","cid","title","content","okText","cancelText","onOk","axios","delete","deleteComment","then","res","message","success","style","textAlign","length","source","rows","onChange","e","target","value","htmlType","onClick","payload","localStorage","getItem","post","catch","push","map","item","key","actions","User","username","JSON","parse","info","avatar","src","alt","datetime","updatedAt","startOf","fromNow","Replies","i","index"],"mappings":"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","file":"static/js/13.f1269daa.chunk.js","sourcesContent":["import React from 'react'\r\nimport './ArticleInfo.css'\r\nimport { Tag, Icon } from 'antd';\r\n\r\nconst ArticleInfo = React.memo(function (props) {\r\n    const { category, author, browse } = props;\r\n    return (\r\n        <div className='articleinfo-container' >\r\n            <Tag color=\"rgb(234, 241, 255)\" className=\"category\">{category}</Tag>\r\n            <Icon type=\"user\" className=\"icon\" />\r\n            <span className=\"iconfont\">{author}</span>\r\n            <Icon type=\"eye\" className=\"icon\" />\r\n            <span className=\"iconfont\">{browse}</span>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ArticleInfo","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getArticle } from '../store/article'\r\nimport './ArticleId.css'\r\nimport { Icon, Comment, Avatar, Input, Button, Modal, message } from 'antd'\r\nimport ArticleInfo from '../components/ArticleInfo'\r\nimport createComment from '../service/createComment'\r\nimport deleteComment from '../service/deleteComment'\r\nimport Markdown from 'react-markdown'\r\nimport moment from 'moment'\r\n\r\nconst { TextArea } = Input;\r\nconst { confirm } = Modal;\r\n\r\nmoment.locale('zh-cn', {\r\n    relativeTime: {\r\n        future: '%s内',\r\n        past: '%s前',\r\n        s: '几秒',\r\n        ss: '%d秒',\r\n        m: '1分钟',\r\n        mm: '%d分钟',\r\n        h: '1小时',\r\n        hh: '%d小时',\r\n        d: '1天',\r\n        dd: '%d天',\r\n        M: '1个月',\r\n        MM: '%d个月',\r\n        y: '1年',\r\n        yy: '%d年'\r\n    },\r\n});\r\n\r\nconst ArticleId = connect(state => ({\r\n    article: state.article\r\n}), {\r\n    getArticle\r\n})(function (props) {\r\n    const { match: { params: { id } }, article, getArticle, history } = props;\r\n    useEffect(() => {\r\n        getArticle(id);\r\n    }, [getArticle, id]);\r\n    const [comment, setComment] = useState('')\r\n    const onChange = (e) => {\r\n        setComment(e.target.value)\r\n    }\r\n    const onSubmit = () => {\r\n        if (!comment) {\r\n            return\r\n        }\r\n        if (localStorage.getItem('user_info')) {\r\n            createComment({ content: comment, ArticleId: id }).then(() => {\r\n                message.success(\"评论成功！\");\r\n                setComment('')\r\n                getArticle(id);\r\n            }).catch();\r\n        } else {\r\n            confirm({\r\n                title: '登陆后添加评论',\r\n                content: '是否跳转到登录页',\r\n                okText: '是',\r\n                cancelText: '否',\r\n                onOk() {\r\n                    history.push('/login')\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const delComment = cid => {\r\n        confirm({\r\n            title: '删除评论',\r\n            content: '确定删除吗',\r\n            okText: '确定',\r\n            cancelText: '取消',\r\n            onOk() {\r\n                deleteComment(cid).then((res) => {\r\n                    message.success(\"删除成功！\");\r\n                    getArticle(id);\r\n                })\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <div className='articleid-container'>\r\n            <h1 className='title'>{article.title}</h1>\r\n            <div className='detail'>\r\n                <ArticleInfo style={{ textAlign: 'center' }} category={article.category} author={article.author} browse={article.browse} />\r\n                <Icon type=\"message\" className='icon' />\r\n                <span className='iconfont'>{article.comment.length}</span>\r\n            </div>\r\n            <Markdown className='content' source={article.content} />\r\n            {article.comment.length ? <p className='comment-title'>\r\n                <Icon type=\"alert\" />&nbsp;\r\n                {`${article.comment.length}条评论`}\r\n            </p> : ''}\r\n            <TextArea rows={4} onChange={onChange} value={comment} />\r\n            <Button htmlType=\"submit\" onClick={onSubmit} type=\"primary\" className=\"btn\">添加评论</Button>\r\n            {article.comment.map(item => (\r\n                <Comment\r\n                    key={item.id}\r\n                    className='comment-container'\r\n                    actions={\r\n                        ((item.User && item.User.username) || 'user') === (localStorage.getItem('user_info') && JSON.parse(localStorage.getItem('user_info')).info.username) ?\r\n                            [<span onClick={() => { delComment(item.id) }}>删除</span>, <span key=\"comment-nested-reply-to\">点击回复</span>] : [<span key=\"comment-nested-reply-to\">点击回复</span>]\r\n                    }\r\n                    author={<span>{(item.User && item.User.username) || 'user'}</span>}\r\n                    avatar={\r\n                        <Avatar\r\n                            src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                            alt={(item.User && item.User.username) || 'user'}\r\n                        />\r\n                    }\r\n                    content={\r\n                        <p>{item.content}</p>\r\n                    }\r\n                    datetime={(\r\n                        <span>\r\n                            {moment(item.updatedAt).startOf('second').fromNow()}\r\n                        </span>\r\n                    )}\r\n                >\r\n                    {item.Replies.map((i, index) => (\r\n                        <Comment\r\n                            key={index}\r\n                            className='comment-container'\r\n                            actions={[<span key=\"comment-nested-reply-to\">点击回复</span>]}\r\n                            author={<span>{(i.User && i.User.username) || 'user'}</span>}\r\n                            avatar={\r\n                                <Avatar\r\n                                    src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                                    alt={(i.User && i.User.username) || 'user'}\r\n                                />\r\n                            }\r\n                            content={\r\n                                <p>{i.content}</p>\r\n                            }\r\n                            datetime={(\r\n                                <span>\r\n                                    {moment(i.updatedAt).startOf('second').fromNow()}\r\n                                </span>\r\n                            )}\r\n                        ></Comment>\r\n                    ))}\r\n                </Comment>\r\n            ))}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ArticleId","import axios from 'axios'\r\n\r\nexport default id => {\r\n    return axios.delete(`/comment/${id}`)\r\n}","import axios from 'axios'\r\n\r\nexport default payload => {\r\n    return axios.post('/comment', payload)\r\n}"],"sourceRoot":""}